<?php
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Field\FieldDefinitionInterface;
use Drupal\Core\Field\FieldItemListInterface;
use Drupal\Core\Session\AccountInterface;

/**
 * Implements hook_entity_field_access()
 *
 * Hides entity fields that should not be editable by authenticated users
 * @param  {String} $operation [Operation on the field]
 * @param  {Object} $field     [Field for which the access is being controlled]
 * @param  {Object} $account   [Currently Logged in user Object]
 * @return {Boolean}           [Allow or Deny access to the field]
 */
function dcp_customizations_entity_field_access($operation, FieldDefinitionInterface $field_definition, AccountInterface $account, FieldItemListInterface $items = NULL) {
  // Disallowing edit access for users not having permission to edit session track details.
  if ($field_definition->getName() == 'field_session_track' && $operation == 'edit') {
    if ($account->hasPermission('edit field session tracks')) {
      return AccessResult::allowed();
    }
    else {
      return AccessResult::forbidden();
    }
  }

  // Disallowing edit access for users not having permission to edit session status details.
  if ($field_definition->getName() == 'field_status' && $operation == 'edit') {
    if ($account->hasPermission('edit field session status')) {
      return AccessResult::allowed();
    }
    else {
      return AccessResult::forbidden();
    }
  }

  // Disallowing edit access for users not having permission to edit session time slots.
  if ($field_definition->getName() == 'field_session_time_slot_s_' && $operation == 'edit') {
    if ($account->hasPermission('edit field session status')) {
      return AccessResult::allowed();
    }
    else {
      return AccessResult::forbidden();
    }
  }
  
  return AccessResult::neutral();
}
